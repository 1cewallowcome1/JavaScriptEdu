let message - объявление переменной, если нет use strict, то можно объявлять переменные без let
const aaa - обхявление константы
const COLOR_RED = "#F00"; - стандарт объявления констант, значение которых известно до исполнения скрипта (таблицы цветов и т д)


Типы данных
тип данных number - это и инт, и числа с плавающей запятой, но не больше чем 9007199254740991, для него надо использовать bigInt
есть Infinity - бесконечность

bigInt - большие числа
const bigInt = 1234567890123456789012345678901234567890n;
Обязательно добавлять n в конец 

STRING
В JavaScript существует три типа кавычек.

    1.Двойные кавычки: "Привет".
    2.Одинарные кавычки: 'Привет'.
    3.Обратные кавычки: `Привет`.

Boolean
null
unndefined - если не задать переменной значение 

Преобразования типов данных
String(value)
Number(value) либо же +value
Boolean(value) - если внутри есть что-то - true, если пусто - false

Операторы
++:
let counter = 0;
alert( ++counter ); // 1
--
let counter = 0;
alert( counter++ ); // 0
--
Если перед - сначал увеличение, потом операция. Если после - сначала операция, потом увеличение

"use strict" - устанавливает старый способ обработки???
// - комментарии


== сравнение с приведением к типам
=== сравнение без приведения к типам



Оператор ?
Синтаксис:

let result = условие ? значение1 : значение2;

Сначала вычисляется условие: если оно истинно, тогда возвращается значение1, в противном случае – значение2.

Например:

let accessAllowed = (age > 18) ? true : false;

Технически, мы можем опустить круглые скобки вокруг age > 18. Оператор вопросительного знака имеет низкий приоритет, поэтому он выполняется после сравнения >.

В примере выше вы можете избежать использования оператора вопросительного знака ?, т.к. сравнение само по себе уже возвращает true/false:

// то же самое
let accessAllowed = age > 18;


/////////////// Последовательная проверка на возраст
let age = prompt('Возраст?', 18);

let message = (age < 3) ? 'Здравствуй, малыш!' :
  (age < 18) ? 'Привет!' :
  (age < 100) ? 'Здравствуйте!' :
  'Какой необычный возраст!';

alert( message );
////////////////////
Оператор ИЛИ
////////////////////
alert( 1 || 0 ); // 1 (1 - истинное значение)
alert( true || 'какая-то строка' ); // true

alert( null || 1 ); // 1 (первое истинное значение)
alert( null || 0 || 1 ); // 1 (первое истинное значение)
alert( undefined || null || 0 ); // 0 (поскольку все ложно, возвращается последнее значение)
//////////////////////

ФУНКЦИИ 
result = confirm(question);
Функция confirm отображает модальное окно с текстом вопроса question и двумя кнопками: OK и Отмена.
Результат – true, если нажата кнопка OK. В других случаях – false.


result = prompt(title, [default]);
Этот код отобразит модальное окно с текстом, полем для ввода текста и кнопками OK/Отмена.